name: "Build & Release"
on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master

jobs:
  # Android build job (Windows runner)
  build_android:
    name: Build Android APK
    runs-on: windows-latest  # Using Windows for Android build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Correct version for checkout

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'latest'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3  # Using v3 for artifact upload
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk  # Path to APK file

  # iOS build job (macOS runner) - COMMENTED OUT FOR NOW
  # build_ios:
  #   name: Build iOS IPA
  #   runs-on: macos-latest  # macOS runner for iOS builds
  #
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2  # Correct version for checkout
  #
  #   - name: Set up Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       flutter-version: 'latest'
  #
  #   - name: Install dependencies
  #     run: flutter pub get
  #
  #   - name: Build iOS IPA (No Code Sign)
  #     run: |
  #       flutter build ios --no-codesign
  #       cd build/ios/iphoneos
  #       mkdir Payload
  #       cd Payload
  #       ln -s ../Runner.app
  #       cd ..
  #       zip -r app.ipa Payload
  #
  #   - name: Upload IPA as artifact
  #     uses: actions/upload-artifact@v3  # Using v3 for artifact upload
  #     with:
  #       name: ios-ipa
  #       path: build/ios/iphoneos/app.ipa  # Path to IPA file

  # Release job (Deploy to GitHub releases)
  release:
    name: Push to GitHub Releases
    runs-on: ubuntu-latest

    needs: [build_android]  # Ensure release runs only after Android build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Correct version for checkout

      - name: Upload Android APK to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/flutter-apk/app-release.apk
          tag: v1.0.${{ github.run_number }}  # Automatically increment version
          token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication
